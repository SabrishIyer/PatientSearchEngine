package com.parsd.patientengine.pojo;
// Generated Apr 19, 2016 7:35:31 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LabTestHistory generated by hbm2java
 */
@Entity
@Table(name="lab_test_history"
    ,catalog="patient"
)
public class LabTestHistory  implements java.io.Serializable {


     private LabTestHistoryId id;
     private LabTestLk labTestLk;
     private PatientEvent patientEvent;
     private Date timeReported;
     private Date timeCollected;
     private String result;
     private String status;
     private LabTestImages labTestImages;

    public LabTestHistory() {
    }

	
    public LabTestHistory(LabTestHistoryId id, LabTestLk labTestLk, PatientEvent patientEvent, Date timeReported, Date timeCollected, String result, String status) {
        this.id = id;
        this.labTestLk = labTestLk;
        this.patientEvent = patientEvent;
        this.timeReported = timeReported;
        this.timeCollected = timeCollected;
        this.result = result;
        this.status = status;
    }
    public LabTestHistory(LabTestHistoryId id, LabTestLk labTestLk, PatientEvent patientEvent, Date timeReported, Date timeCollected, String result, String status, LabTestImages labTestImages) {
       this.id = id;
       this.labTestLk = labTestLk;
       this.patientEvent = patientEvent;
       this.timeReported = timeReported;
       this.timeCollected = timeCollected;
       this.result = result;
       this.status = status;
       this.labTestImages = labTestImages;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="patientUpi", column=@Column(name="patient_UPI", nullable=false, length=6) ), 
        @AttributeOverride(name="doctorId", column=@Column(name="doctor_id", nullable=false) ), 
        @AttributeOverride(name="eventDate", column=@Column(name="event_date", nullable=false, length=10) ), 
        @AttributeOverride(name="testId", column=@Column(name="test_id", nullable=false) ) } )
    public LabTestHistoryId getId() {
        return this.id;
    }
    
    public void setId(LabTestHistoryId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="test_id", nullable=false, insertable=false, updatable=false)
    public LabTestLk getLabTestLk() {
        return this.labTestLk;
    }
    
    public void setLabTestLk(LabTestLk labTestLk) {
        this.labTestLk = labTestLk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="patient_UPI", referencedColumnName="patient_UPI", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="doctor_id", referencedColumnName="doctor_id", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="event_date", referencedColumnName="event_date", nullable=false, insertable=false, updatable=false) } )
    public PatientEvent getPatientEvent() {
        return this.patientEvent;
    }
    
    public void setPatientEvent(PatientEvent patientEvent) {
        this.patientEvent = patientEvent;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_reported", nullable=false, length=19)
    public Date getTimeReported() {
        return this.timeReported;
    }
    
    public void setTimeReported(Date timeReported) {
        this.timeReported = timeReported;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time_collected", nullable=false, length=19)
    public Date getTimeCollected() {
        return this.timeCollected;
    }
    
    public void setTimeCollected(Date timeCollected) {
        this.timeCollected = timeCollected;
    }

    
    @Column(name="result", nullable=false, length=20)
    public String getResult() {
        return this.result;
    }
    
    public void setResult(String result) {
        this.result = result;
    }

    
    @Column(name="status", nullable=false, length=10)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="labTestHistory")
    public LabTestImages getLabTestImages() {
        return this.labTestImages;
    }
    
    public void setLabTestImages(LabTestImages labTestImages) {
        this.labTestImages = labTestImages;
    }




}


