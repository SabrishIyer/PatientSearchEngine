package com.parsd.patientengine.pojo;
// Generated Apr 19, 2016 7:35:31 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * PatientEvent generated by hbm2java
 */
@Entity
@Table(name="patient_event"
    ,catalog="patient"
)
public class PatientEvent  implements java.io.Serializable {


     private PatientEventId id;
     private Doctor doctor;
     private Patient patient;
     private String eventDesc;
     private String patientType;
     private VitalSigns vitalSigns;
     private Treatment treatment;
     private Set<LabTestHistory> labTestHistories = new HashSet<LabTestHistory>(0);
     private Set<BedAssignment> bedAssignments = new HashSet<BedAssignment>(0);
     private Set<Prescription> prescriptions = new HashSet<Prescription>(0);

    public PatientEvent() {
    }

	
    public PatientEvent(PatientEventId id, Doctor doctor, Patient patient, String eventDesc, String patientType) {
        this.id = id;
        this.doctor = doctor;
        this.patient = patient;
        this.eventDesc = eventDesc;
        this.patientType = patientType;
    }
    public PatientEvent(PatientEventId id, Doctor doctor, Patient patient, String eventDesc, String patientType, VitalSigns vitalSigns, Treatment treatment, Set<LabTestHistory> labTestHistories, Set<BedAssignment> bedAssignments, Set<Prescription> prescriptions) {
       this.id = id;
       this.doctor = doctor;
       this.patient = patient;
       this.eventDesc = eventDesc;
       this.patientType = patientType;
       this.vitalSigns = vitalSigns;
       this.treatment = treatment;
       this.labTestHistories = labTestHistories;
       this.bedAssignments = bedAssignments;
       this.prescriptions = prescriptions;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="patientUpi", column=@Column(name="patient_UPI", nullable=false, length=6) ), 
        @AttributeOverride(name="doctorId", column=@Column(name="doctor_id", nullable=false) ), 
        @AttributeOverride(name="eventDate", column=@Column(name="event_date", nullable=false, length=10) ) } )
    public PatientEventId getId() {
        return this.id;
    }
    
    public void setId(PatientEventId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="doctor_id", nullable=false, insertable=false, updatable=false)
    public Doctor getDoctor() {
        return this.doctor;
    }
    
    public void setDoctor(Doctor doctor) {
        this.doctor = doctor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="patient_UPI", nullable=false, insertable=false, updatable=false)
    public Patient getPatient() {
        return this.patient;
    }
    
    public void setPatient(Patient patient) {
        this.patient = patient;
    }

    
    @Column(name="event_desc", nullable=false)
    public String getEventDesc() {
        return this.eventDesc;
    }
    
    public void setEventDesc(String eventDesc) {
        this.eventDesc = eventDesc;
    }

    
    @Column(name="patient_type", nullable=false, length=20)
    public String getPatientType() {
        return this.patientType;
    }
    
    public void setPatientType(String patientType) {
        this.patientType = patientType;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="patientEvent")
    public VitalSigns getVitalSigns() {
        return this.vitalSigns;
    }
    
    public void setVitalSigns(VitalSigns vitalSigns) {
        this.vitalSigns = vitalSigns;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="patientEvent")
    public Treatment getTreatment() {
        return this.treatment;
    }
    
    public void setTreatment(Treatment treatment) {
        this.treatment = treatment;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="patientEvent")
    public Set<LabTestHistory> getLabTestHistories() {
        return this.labTestHistories;
    }
    
    public void setLabTestHistories(Set<LabTestHistory> labTestHistories) {
        this.labTestHistories = labTestHistories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="patientEvent")
    public Set<BedAssignment> getBedAssignments() {
        return this.bedAssignments;
    }
    
    public void setBedAssignments(Set<BedAssignment> bedAssignments) {
        this.bedAssignments = bedAssignments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="patientEvent")
    public Set<Prescription> getPrescriptions() {
        return this.prescriptions;
    }
    
    public void setPrescriptions(Set<Prescription> prescriptions) {
        this.prescriptions = prescriptions;
    }




}


